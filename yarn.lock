on: [push]

name: ACI Debug & Deploy Workflow

jobs:
  debug-and-deploy:
    runs-on: ubuntu-latest

    env:
      RG:       ${{ secrets.RESOURCE_GROUP }}
      NAME:     ${{ secrets.CONTAINER_NAME }}
      REG:      ${{ secrets.REGISTRY_LOGIN_SERVER }}
      REPO:     ${{ secrets.REPOSITORY_NAME }}
      USER:     ${{ secrets.REGISTRY_USERNAME }}
      PASS:     ${{ secrets.REGISTRY_PASSWORD }}
      SA_NAME:  ${{ secrets.STORAGE_ACCOUNT_NAME }}
      SA_KEY:   ${{ secrets.STORAGE_ACCOUNT_KEY }}
      SHARE:    ${{ secrets.SHARE_NAME }}
      LOC:      ${{ secrets.LOCATION }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build & push image
        run: |
          docker build -t $REG/$REPO:${{ github.run_number }} .
          docker push   $REG/$REPO:${{ github.run_number }}

      - name: Delete old container if exists
        run: |
          az container delete --resource-group $RG --name $NAME --yes || true

      - name: 1) Minimal ACI deploy (zonder opslag)
        run: |
          az container create \
            --resource-group $RG \
            --name            minimal-${{ github.run_number }} \
            --image           $REG/$REPO:${{ github.run_number }} \
            --dns-name-label  minimaltest${{ github.run_number }} \
            --location        $LOC \
            --os-type         Linux \
            --ports           3000 \
            --cpu             1 \
            --memory          1.5 \
            --debug
        continue-on-error: true

      - name: 2) ACI deploy + share-only
        run: |
          az container create \
            --resource-group $RG \
            --name            share-test-${{ github.run_number }} \
            --image           $REG/$REPO:${{ github.run_number }} \
            --dns-name-label  sharetest${{ github.run_number }} \
            --location        $LOC \
            --os-type         Linux \
            --ports           3000 \
            --cpu             1 \
            --memory          1.5 \
            --azure-file-volume-share-name $SHARE \
            --debug
        continue-on-error: true

      - name: 3) ACI deploy + share + account-name
        run: |
          az container create \
            --resource-group $RG \
            --name            acct-test-${{ github.run_number }} \
            --image           $REG/$REPO:${{ github.run_number }} \
            --dns-name-label  accttest${{ github.run_number }} \
            --location        $LOC \
            --os-type         Linux \
            --ports           3000 \
            --cpu             1 \
            --memory          1.5 \
            --azure-file-volume-share-name $SHARE \
            --azure-file-volume-account-name $SA_NAME \
            --debug
        continue-on-error: true

      - name: 4) Full ACI deploy (met alle flags)
        run: |
          DNS=$(echo $NAME-${{ github.run_number }} | tr '[:upper:]' '[:lower:]')
          az container create \
            --resource-group                 $RG \
            --name                           $NAME \
            --image                          $REG/$REPO:${{ github.run_number }} \
            --registry-login-server          $REG \
            --registry-username              $USER \
            --registry-password              $PASS \
            --dns-name-label                 $DNS \
            --location                       $LOC \
            --os-type                        Linux \
            --ports                          3000 \
            --azure-file-volume-share-name   $SHARE \
            --azure-file-volume-account-name $SA_NAME \
            --azure-file-volume-account-key  $SA_KEY \
            --azure-file-volume-mount-path   /mnt/todos \
            --cpu                            1 \
            --memory                         1.5 \
            --debug
