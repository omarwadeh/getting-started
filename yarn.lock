on: [push]

name: GettingStarted_Container_Workflow

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    # Lees al je secrets in als env vars
    env:
      RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
      CONTAINER_NAME: ${{ secrets.CONTAINER_NAME }}
      REGISTRY_SERVER: ${{ secrets.REGISTRY_LOGIN_SERVER }}
      REPOSITORY_NAME: ${{ secrets.REPOSITORY_NAME }}
      STORAGE_ACCOUNT_NAME: ${{ secrets.STORAGE_ACCOUNT_NAME }}
      SHARE_NAME: ${{ secrets.SHARE_NAME }}
      LOCATION: ${{ secrets.LOCATION }}
      STORAGE_ACCOUNT_KEY: ${{ secrets.STORAGE_ACCOUNT_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Azure CLI Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Docker Login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build & push image
        run: |
          docker build . -t $REGISTRY_SERVER/$REPOSITORY_NAME:${{ github.run_number }}
          docker push $REGISTRY_SERVER/$REPOSITORY_NAME:${{ github.run_number }}

      - name: Delete existing container (if exists)
        run: |
          az container delete \
            --resource-group "$RESOURCE_GROUP" \
            --name "$CONTAINER_NAME" \
            --yes || true

      - name: Debug environment (values masked but show structure)
        run: |
          echo "RESOURCE_GROUP: $RESOURCE_GROUP"
          echo "CONTAINER_NAME: $CONTAINER_NAME"
          echo "REGISTRY_SERVER: $REGISTRY_SERVER"
          echo "REPOSITORY_NAME: $REPOSITORY_NAME"
          echo "STORAGE_ACCOUNT_NAME: $STORAGE_ACCOUNT_NAME"
          echo "SHARE_NAME: $SHARE_NAME"
          echo "LOCATION: $LOCATION"
          echo "STORAGE_ACCOUNT_KEY length: ${#STORAGE_ACCOUNT_KEY}"

      - name: Ensure Azure File Share exists
        run: |
          az storage share create \
            --account-name "$STORAGE_ACCOUNT_NAME" \
            --name "$SHARE_NAME" \
            --account-key "$STORAGE_ACCOUNT_KEY" \
            --only-show-errors || echo "Share already exists"

      - name: Deploy to ACI with persistent storage (with debug)
        run: |
          az container create \
            --resource-group "$RESOURCE_GROUP" \
            --name "$CONTAINER_NAME" \
            --image "$REGISTRY_SERVER/$REPOSITORY_NAME:${{ github.run_number }}" \
            --registry-login-server "$REGISTRY_SERVER" \
            --registry-username "${{ secrets.REGISTRY_USERNAME }}" \
            --registry-password "${{ secrets.REGISTRY_PASSWORD }}" \
            --dns-name-label "$CONTAINER_NAME" \
            --location "$LOCATION" \
            --os-type Linux \
            --ports 3000 \
            --azure-file-volume-share-name "$SHARE_NAME" \
            --azure-file-volume-account-name "$STORAGE_ACCOUNT_NAME" \
            --azure-file-volume-account-key "$STORAGE_ACCOUNT_KEY" \
            --azure-file-volume-mount-path "/etc/todos" \
            --cpu 1 \
            --memory 1.5 \
            --debug
