on: [push]

name: GettingStarted_Container_Workflow

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      RESOURCE_GROUP:       ${{ secrets.RESOURCE_GROUP }}
      CONTAINER_NAME:       ${{ secrets.CONTAINER_NAME }}
      REGISTRY_LOGIN_SERVER:${{ secrets.REGISTRY_LOGIN_SERVER }}
      REPOSITORY_NAME:      ${{ secrets.REPOSITORY_NAME }}
      REGISTRY_USERNAME:    ${{ secrets.REGISTRY_USERNAME }}
      REGISTRY_PASSWORD:    ${{ secrets.REGISTRY_PASSWORD }}
      STORAGE_ACCOUNT_NAME: ${{ secrets.STORAGE_ACCOUNT_NAME }}
      STORAGE_ACCOUNT_KEY:  ${{ secrets.STORAGE_ACCOUNT_KEY }}
      SHARE_NAME:           ${{ secrets.SHARE_NAME }}
      LOCATION:             ${{ secrets.LOCATION }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Docker login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY_LOGIN_SERVER }}
          username:    ${{ env.REGISTRY_USERNAME }}
          password:    ${{ env.REGISTRY_PASSWORD }}

      - name: Build & push image
        run: |
          docker build . -t $REGISTRY_LOGIN_SERVER/$REPOSITORY_NAME:${{ github.run_number }}
          docker push $REGISTRY_LOGIN_SERVER/$REPOSITORY_NAME:${{ github.run_number }}

      - name: Delete existing container (if exists)
        run: |
          az container delete \
            --resource-group $RESOURCE_GROUP \
            --name $CONTAINER_NAME \
            --yes || true

      - name: Ensure Azure File Share exists
        run: |
          az storage share create \
            --account-name $STORAGE_ACCOUNT_NAME \
            --name         $SHARE_NAME \
            --account-key  $STORAGE_ACCOUNT_KEY \
            --only-show-errors || echo "Share already exists"

      - name: Deploy ACI with persistent storage
        run: |
          # DNS-label mag alleen lowercase letters/numbers/koppelteken bevatten
          DNS_LABEL=$(echo $CONTAINER_NAME | tr '[:upper:]' '[:lower:]')
          
          az container create \
            --resource-group                 $RESOURCE_GROUP \
            --name                           $CONTAINER_NAME \
            --image                          $REGISTRY_LOGIN_SERVER/$REPOSITORY_NAME:${{ github.run_number }} \
            --registry-login-server          $REGISTRY_LOGIN_SERVER \
            --registry-username              $REGISTRY_USERNAME \
            --registry-password              $REGISTRY_PASSWORD \
            --dns-name-label                 $DNS_LABEL \
            --location                       $LOCATION \
            --os-type                        Linux \
            --ports                          3000 \
            --azure-file-volume-share-name   $SHARE_NAME \
            --azure-file-volume-account-name $STORAGE_ACCOUNT_NAME \
            --azure-file-volume-account-key  $STORAGE_ACCOUNT_KEY \
            --azure-file-volume-mount-path   /mnt/todos \
            --cpu                            1 \
            --memory                         1.5 \
            --debug
