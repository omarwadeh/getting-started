on: [push]

name: GettingStarted_Container_Workflow

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Azure CLI Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Docker login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username:    ${{ secrets.REGISTRY_USERNAME }}
          password:    ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build & push image
        run: |
          docker build -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ secrets.REPOSITORY_NAME }}:${{ github.run_number }} .
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ secrets.REPOSITORY_NAME }}:${{ github.run_number }}

      - name: Delete existing container (if exists)
        run: |
          az container delete \
            --resource-group ${{ secrets.RESOURCE_GROUP }} \
            --name          ${{ secrets.CONTAINER_NAME }} \
            --yes || true

      - name: Create Azure File Share (if missing)
        run: |
          az storage share create \
            --account-name ${{ secrets.STORAGE_ACCOUNT_NAME }} \
            --name         ${{ secrets.SHARE_NAME }} \
            --account-key  ${{ secrets.STORAGE_ACCOUNT_KEY }} \
            --only-show-errors || true

      - name: Deploy to Azure Container Instances
        run: |
          az container create \
            --resource-group                  ${{ secrets.RESOURCE_GROUP }} \
            --name                            ${{ secrets.CONTAINER_NAME }} \
            --image                           ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ secrets.REPOSITORY_NAME }}:${{ github.run_number }} \
            --dns-name-label                  ${{ secrets.CONTAINER_NAME }} \
            --location                        ${{ secrets.LOCATION }} \
            --os-type                         Linux \
            --ports                           3000 \
            --cpu                             1 \
            --memory                          1.5 \
            --azure-file-volume-share-name   ${{ secrets.SHARE_NAME }} \
            --azure-file-volume-account-name ${{ secrets.STORAGE_ACCOUNT_NAME }} \
            --azure-file-volume-account-key  ${{ secrets.STORAGE_ACCOUNT_KEY }} \
            --azure-file-volume-mount-path   "/mnt/todos"
